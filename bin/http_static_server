#!/usr/bin/env ruby

DEBUG_MODE = false

require 'mini_node/http_server'
require 'mime/types'

MiniNode::HttpServer.new("0.0.0.0", 4000) do |request, response, reactor|
  if DEBUG_MODE
    puts '------------'
    puts [request.verb, request.url, request.headers].inspect
    puts '------------'
  end

  unless request.get? || request.head?
    response.status_code = :forbidden
    response.finish

    next
  end

  begin
    file = File.open(File.join('public', request.url), 'r')

    mime_type    = MIME::Types.of(file.path).first
    content_type = mime_type && mime_type.content_type
    media_type   = 'charset=UTF-8' if mime_type && mime_type.media_type.downcase == 'text'

    if request.if_modified_since && file.mtime <= request.if_modified_since
      response.status_code   = :not_modified
      response.type          = media_type ? [content_type, media_type].join(';') : content_type if content_type
      response.last_modified = file.mtime
      response.finish

      file.close

      next
    end

    response.status_code   = :ok
    response.type          = media_type ? [content_type, media_type].join(';') : content_type if content_type
    response.length        = file.size
    response.last_modified = file.mtime

    if request.head?
      response.finish
      file.close

      next
    end

    response.mark_start_of_body

    file_stream = reactor.add_stream(file, true)

    file_stream.pipe_to response

    file_stream.on(:close) do
      response.finish
    end
  rescue Errno::ENOENT
    response.status_code = :not_found
    response.finish
  end
end

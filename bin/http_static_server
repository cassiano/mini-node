#!/usr/bin/env ruby

DEBUG_MODE = false

require 'bundler/setup'
require 'mini_node'
require "http/parser"
require 'mime/types'
require 'time'

reactor = MiniNode::Reactor.new

server = reactor.listen("0.0.0.0", 4000)

server.on(:accept) do |client|
  parser = Http::Parser.new

  parser.on_message_complete = proc do |env|
    if DEBUG_MODE
      puts '------------'
      puts [parser.http_method, parser.request_url, parser.headers].inspect
      puts '------------'
    end

    begin
      file = File.open(File.join('public', parser.request_url), 'r')

      mime_type    = MIME::Types.of(file.path).first
      content_type = mime_type.content_type
      media_type   = 'charset=UTF-8' if mime_type.media_type.downcase == 'text'

      if (if_modified_since = parser.headers['If-Modified-Since']) && file.mtime <= Time.parse(if_modified_since)
        client.write("HTTP/1.1 304 Not Modified\r\n")
        client.write("Content-Type: #{content_type};#{media_type}\r\n")
        client.write("Last-Modified: #{file.mtime.httpdate}\r\n")

        file.close
        client.close
      else
        client.write("HTTP/1.1 200 OK\r\n")
        client.write("Content-Type: #{content_type};#{media_type}\r\n")
        client.write("Content-Length: #{file.size}\r\n")
        client.write("Last-Modified: #{file.mtime.httpdate}\r\n")

        if parser.http_method == 'HEAD'
          file.close
          client.close
        else
          client.write("\r\n")

          file_stream = reactor.add_stream(file, true)
          file_stream.pipe_to(client)
          file_stream.on(:close) { client.close }
        end
      end
    rescue Errno::ENOENT
      client.write("HTTP/1.1 404 Not Found\r\n")
      client.write("Content-Length: 0\r\n")
      client.close
    end
  end

  client.on(:data) do |data|
    parser << data
  end
end

reactor.start
